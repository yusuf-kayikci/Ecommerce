@using X.PagedList;
@using X.PagedList.Mvc.Core
@model IEnumerable<Ecommerce.Common.Models.Product>

@{
    ViewData["Title"] = "View";
}

<h1>View</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MakeFlag)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FinishedGoodsFlag)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Color)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MakeFlag)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FinishedGoodsFlag)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Color)
                </td>

                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.ProductId }) |
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page }))
